[project]
authors = [{name = "jgunstone", email = "j.gunstone@maxfordham.com"}]
description = "bdns references + configurable equipment references for drawings"
name = "bdns-plus"
requires-python = ">= 3.11"
version = "0.1.0"
dependencies = [
    # "pyrulefilter@git+https://github.com/maxfordham/pyrulefilter#main",
    "bsdd>=0.8.2,<0.9",
    "pydantic-settings>=2.8.0,<3",
    "pycountry>=24.6.1,<25",
]
# optional-dependencies = {  } # TODO: add polars, great_tables, pandas, ipywidgets, ipydatagrid

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
frictionless = ">=5.18.0,<6"
annotated-types = ">=0.7.0,<0.8"
pytest = "*"

[tool.pixi.pypi-dependencies]
bdns_plus = { path = ".", editable = true }
pytest-examples = { version = ">=0.0.18,<0.0.20" }
pyrulefilter = { git = "git+https://github.com/maxfordham/pyrulefilter", branch = "main"} # TODO: remove when pyrulefilter is on PyPI
great_tables = { git = "git+https://github.com/posit-dev/great-tables", branch = "main"}   # ">=0.17.0,<0.18"

[tool.pixi.feature.docs.dependencies]
jupyterlab = { version = ">=4.0.0,<5"}
quarto = ">=1.6.40,<2"
jupytext = ">=1.17.0,<2"
pandas = "*"
polars = ">=1.3.0,<2"
ipywidgets = ">=8.1.5,<9"
itables = ">=2.3.0,<3"
anywidget = ">=0.9.18,<0.10"
ipydatagrid = ">=1.4.0,<1.5.0"


[tool.pixi.feature.docs.pypi-dependencies]
jupyterlab-quarto = { version = ">=0.3.4,<0.4"}
bsdd = { version = ">=0.8.1,<0.9"}
notebook-intelligence = { version = ">1.3.4,<2"}
jsonschema2md = { version = ">=1.5.2,<2"}
reactable = { version = ">=0.1.5,<0.2"}

[tool.pixi.feature.package.dependencies]
hatch = "*"

[tool.pixi.environments]
docs = ["docs"]
package = {features = ["package"], no-default-feature = true}

[tool.pixi.tasks]
tests = "pytest"
delete-docs = { cmd = """rm -r _site
&& find . -name "*.quarto_ipynb" -type f -delete
""", cwd = "docs" } 

[tool.pixi.feature.docs.tasks]
jlab = { cmd = "jupyter lab", cwd = "docs" }
docs = { cmd = "quarto render .", cwd = "docs" }
preview = { cmd = "quarto preview .", cwd = "docs" }


[tool.pixi.feature.package.tasks]
build = "hatch build"
# publish = "hatch publish -u __token__ -a <your-pypi-token>"
# ship  = {depends-on = ["build", "publish"]}






